<?xml version="1.0" encoding="UTF-8" ?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
    <title>JavaScript Nuggets</title>
    <author>JavaScript Nuggets</author>
    <description>
    Where little nuggets of javascript are posted, via twitter.
    </description>
    <link>https://www.javascriptnuggets.com</link>
    <language>en</language>
<item>
        <title>Tweet about performance of queues in JavaScript with LinkedLists vs Arrays</title>
        <author>Shannon Duncan</author>
        <link>https://twitter.com/iamMrDuncan/status/1112782248619720705</link>
        <pubDate>1:22 PM - Apr 1, 2019</pubDate>
        <description>Todays javascript nugget can be found at the following link: https://twitter.com/iamMrDuncan/status/1112782248619720705. On topic: Tweet about performance of queues in JavaScript with LinkedLists vs Arrays
        </description>
        <content:encoded>
          Todays javascript nugget can be found at the following link: https://twitter.com/iamMrDuncan/status/1112782248619720705.
          &#60;br&#62; 
          &#60;blockquote class="twitter-tweet" data-lang="en"&#62;&#60;p lang="en" dir="ltr"&#62;So when you create a queue for storing items to be processed in order of first in first out. How do you normally do it? Like below? That&#8217;s not the best and most efficient way.&#60;a href="https://twitter.com/hashtag/javascript?src=hash&#38;amp;ref_src=twsrc%5Etfw"&#62;#javascript&#60;/a&#62; &#60;a href="https://twitter.com/hashtag/algorithms?src=hash&#38;amp;ref_src=twsrc%5Etfw"&#62;#algorithms&#60;/a&#62;&#60;br&#62;&#60;br&#62;Lets talk about it in todays &#60;a href="https://twitter.com/hashtag/javascriptnuggets?src=hash&#38;amp;ref_src=twsrc%5Etfw"&#62;#javascriptnuggets&#60;/a&#62; in the thread below üëá &#60;a href="https://t.co/lFY5yYmhUc"&#62;pic.twitter.com/lFY5yYmhUc&#60;/a&#62;&#60;/p&#62;&#38;mdash; Shannon Duncan - üê¶ (@iamMrDuncan) &#60;a href="https://twitter.com/iamMrDuncan/status/1112782248619720705?ref_src=twsrc%5Etfw"&#62;April 1, 2019&#60;/a&#62;&#60;/blockquote&#62;
        </content:encoded>
    </item>
  <item>
        <title>Tweet about performance of javascript JSON with different numeric types</title>
        <author>Shannon Duncan</author>
        <link>https://twitter.com/iamMrDuncan/status/1112466260116291587</link>
        <pubDate>4:26 PM - Mar 31, 2019</pubDate>
        <description>Todays javascript nugget can be found at the following link: https://twitter.com/iamMrDuncan/status/1112466260116291587. On topic: Tweet about performance of javascript JSON with different numeric types
        </description>
        <content:encoded>
          Todays javascript nugget can be found at the following link: https://twitter.com/iamMrDuncan/status/1112466260116291587.
          &#60;br&#62; 
          &#60;blockquote class="twitter-tweet" data-lang="en"&#62;&#60;p lang="en" dir="ltr"&#62;An interesting thing that happens when using JSON and storing two different number types within the same shape of JSON.&#60;a href="https://twitter.com/hashtag/javascript?src=hash&#38;amp;ref_src=twsrc%5Etfw"&#62;#javascript&#60;/a&#62; &#60;a href="https://twitter.com/hashtag/nodejs?src=hash&#38;amp;ref_src=twsrc%5Etfw"&#62;#nodejs&#60;/a&#62; &#60;a href="https://twitter.com/hashtag/javascriptnuggets?src=hash&#38;amp;ref_src=twsrc%5Etfw"&#62;#javascriptnuggets&#60;/a&#62;&#60;br&#62;&#60;br&#62;More information in the thread below üëá &#60;a href="https://t.co/ghV9Js3OmP"&#62;pic.twitter.com/ghV9Js3OmP&#60;/a&#62;&#60;/p&#62;&#38;mdash; Shannon Duncan - üê¶ (@iamMrDuncan) &#60;a href="https://twitter.com/iamMrDuncan/status/1112466260116291587?ref_src=twsrc%5Etfw"&#62;March 31, 2019&#60;/a&#62;&#60;/blockquote&#62;
        </content:encoded>
    </item>
  <item>
        <title>Tweet about creating empty pure objects.</title>
        <author>Shannon Duncan</author>
        <link>https://twitter.com/iamMrDuncan/status/1111675401980571648</link>
        <pubDate>12:04 PM - Mar 29, 2019</pubDate>
        <description>Todays javascript nugget can be found at the following link: https://twitter.com/iamMrDuncan/status/1111675401980571648. On topic: Tweet about creating empty pure objects.
        </description>
        <content:encoded>
          Todays javascript nugget can be found at the following link: https://twitter.com/iamMrDuncan/status/1111675401980571648.
          &#60;br&#62; 
          &#60;blockquote class="twitter-tweet" data-lang="en"&#62;&#60;p lang="en" dir="ltr"&#62;Did you know that when you create an object in &#60;a href="https://twitter.com/hashtag/JavaScript?src=hash&#38;amp;ref_src=twsrc%5Etfw"&#62;#JavaScript&#60;/a&#62; using only `{}` that you have more than just an empty object?&#60;br&#62;&#60;br&#62;Use the following &#60;a href="https://twitter.com/hashtag/javascriptNugget?src=hash&#38;amp;ref_src=twsrc%5Etfw"&#62;#javascriptNugget&#60;/a&#62;, and read more in the tweet thread below üëá &#60;a href="https://t.co/YW5KKL6yLx"&#62;pic.twitter.com/YW5KKL6yLx&#60;/a&#62;&#60;/p&#62;&#38;mdash; Shannon Duncan - üê¶ (@iamMrDuncan) &#60;a href="https://twitter.com/iamMrDuncan/status/1111675401980571648?ref_src=twsrc%5Etfw"&#62;March 29, 2019&#60;/a&#62;&#60;/blockquote&#62;
        </content:encoded>
    </item>
  <item>
        <title>Tweet about creating an immutable constant</title>
        <author>Shannon Duncan</author>
        <link>https://twitter.com/iamMrDuncan/status/1111430090846461953</link>
        <pubDate>7:49 PM - Mar 28, 2019</pubDate>
        <description>Todays javascript nugget can be found at the following link: https://twitter.com/iamMrDuncan/status/1111430090846461953. On topic: Tweet about creating an immutable constant
        </description>
        <content:encoded>
          Todays javascript nugget can be found at the following link: https://twitter.com/iamMrDuncan/status/1111430090846461953.
          &#60;br&#62; 
          &#60;blockquote class="twitter-tweet" data-lang="en"&#62;&#60;p lang="en" dir="ltr"&#62;Ever noticed that JavaScript const doesn&#38;#39;t work like you think it should for objects? Well thats a deep rabbit hole, and heres a quick way to make a real constant object using Object.freeze. &#60;a href="https://t.co/k85ZylZGIj"&#62;pic.twitter.com/k85ZylZGIj&#60;/a&#62;&#60;/p&#62;&#38;mdash; Shannon Duncan - üê¶ (@iamMrDuncan) &#60;a href="https://twitter.com/iamMrDuncan/status/1111430090846461953?ref_src=twsrc%5Etfw"&#62;March 29, 2019&#60;/a&#62;&#60;/blockquote&#62;
        </content:encoded>
    </item>
  <item>
        <title>Tweet about how to log to both the console and a file</title>
        <author>Shannon Duncan</author>
        <link>https://twitter.com/iamMrDuncan/status/1108146983313788928</link>
        <pubDate>6:23 PM - Mar 19, 2019</pubDate>
        <description>Todays javascript nugget can be found at the following link: https://twitter.com/iamMrDuncan/status/1108146983313788928. On topic: Tweet about how to log to both the console and a file
        </description>
        <content:encoded>
          Todays javascript nugget can be found at the following link: https://twitter.com/iamMrDuncan/status/1108146983313788928.
          &#60;br&#62; 
          &#60;blockquote class="twitter-tweet" data-lang="en"&#62;&#60;p lang="en" dir="ltr"&#62;When I want to write to both the console and a log file in &#60;a href="https://twitter.com/hashtag/nodejs?src=hash&#38;amp;ref_src=twsrc%5Etfw"&#62;#nodejs&#60;/a&#62;, this is what my captains.log is for üòâü§™. Simple. Easy to read. And works good for small use cases. Stardate 72679. &#60;a href="https://t.co/YMaqMoS93U"&#62;pic.twitter.com/YMaqMoS93U&#60;/a&#62;&#60;/p&#62;&#38;mdash; Shannon Duncan - üê¶ (@iamMrDuncan) &#60;a href="https://twitter.com/iamMrDuncan/status/1108146983313788928?ref_src=twsrc%5Etfw"&#62;March 19, 2019&#60;/a&#62;&#60;/blockquote&#62;
        </content:encoded>
    </item>
  </rss>